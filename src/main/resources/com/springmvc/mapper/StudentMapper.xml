<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.springmvc.entity.Student">
        <id column="stu_id" property="stuId" jdbcType="VARCHAR"/>
        <result column="stu_class" property="stuClass" jdbcType="VARCHAR"/>
        <result column="stu_num" property="stuNum" jdbcType="VARCHAR"/>
        <result column="stu_name" property="stuName" jdbcType="VARCHAR"/>
        <result column="stu_sex" property="stuSex" jdbcType="VARCHAR"/>
        <result column="stu_birthday" property="stuBirthday" jdbcType="DATE"/>
        <result column="stu_grade" property="stuGrade" jdbcType="INTEGER"/>
        <result column="stu_degree" property="stuDegree" jdbcType="VARCHAR"/>
        <result column="stu_phone" property="stuPhone" jdbcType="VARCHAR"/>
        <result column="stu_remark" property="stuRemark" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="StudentWithGCMCResultMap" type="com.springmvc.dto.student.StudentWithGradeClassMajorCollegeDto"
               extends="BaseResultMap">
        <result column="stu_grade_name" property="stuGradeName" jdbcType="VARCHAR"/>
        <result column="stu_class_name" property="stuClassName" jdbcType="VARCHAR"/>
        <result column="stu_major_name" property="stuMajorName" jdbcType="VARCHAR"/>
        <result column="stu_college_name" property="stuCollegeName" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insertStudent" parameterType="com.springmvc.dto.student.StudentWithGradeClassMajorCollegeDto">
        <selectKey keyProperty="stuId" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') from dual
        </selectKey>
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null and stuId != ''">
                stu_id,
            </if>
            <if test="stuClassName != null and stuClassName != ''">
                stu_class,
            </if>
            <if test="stuNum != null and stuNum != ''">
                stu_num,
            </if>
            <if test="stuName != null and stuName != ''">
                stu_name,
            </if>
            <if test="stuSex != null and stuSex != ''">
                stu_sex,
            </if>
            stu_birthday,
            <if test="stuGradeName != null and stuGradeName != ''">
                stu_grade,
            </if>
            <if test="stuDegree != null and stuDegree != ''">
                stu_degree,
            </if>
            stu_phone,stu_remark
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null and stuId != ''">
                #{stuId,jdbcType=VARCHAR},
            </if>
            <if test="stuClassName != null and stuClassName != ''">
                (select class_id from class where class_name=#{stuClassName,jdbcType=VARCHAR}),
            </if>
            <if test="stuNum != null and stuNum != ''">
                #{stuNum},
            </if>
            <if test="stuName != null and stuName != ''">
                #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="stuSex != null and stuSex != ''">
                #{stuSex,jdbcType=VARCHAR},
            </if>
            #{stuBirthday},
            <if test="stuGradeName != null and stuGradeName != ''">
                (select grade_id from grade where grade_name=#{stuGradeName,jdbcType=VARCHAR}),
            </if>
            <if test="stuDegree != null and stuDegree != ''">
                #{stuDegree,jdbcType=VARCHAR},
            </if>
            #{stuPhone,jdbcType=VARCHAR},
            #{stuRemark,jdbcType=VARCHAR}
        </trim>
    </insert>

    <update id="updateStudentInfo">
        update student
        <set>
            <trim suffixOverrides=",">
                <if test="stuWGCMC.stuClassName != null and stuWGCMC.stuClassName != ''">
                    stu_class=(select class_id from class where class_name=#{stuWGCMC.stuClassName}),
                </if>
                <if test="stuWGCMC.stuNum != null and stuWGCMC.stuNum != ''">
                    stu_num=#{stuWGCMC.stuNum},
                </if>
                <if test="stuWGCMC.stuName != null and stuWGCMC.stuName != ''">
                    stu_name=#{stuWGCMC.stuName},
                </if>
                <if test="stuWGCMC.stuSex != null and stuWGCMC.stuSex != ''">
                    stu_sex=#{stuWGCMC.stuSex},
                </if>
                stu_birthday=#{stuWGCMC.stuBirthday},
                <if test="stuWGCMC.stuGradeName != null and stuWGCMC.stuGradeName != ''">
                    stu_grade=(select grade_id from grade where grade_name=#{stuWGCMC.stuGradeName}),
                </if>
                <if test="stuWGCMC.stuDegree != null and stuWGCMC.stuDegree != ''">
                    stu_degree=#{stuWGCMC.stuDegree},
                </if>
                stu_phone=#{stuWGCMC.stuPhone},stu_remark=#{stuWGCMC.stuRemark}
                where stu_num=#{stuOriNum}
            </trim>
        </set>
    </update>
    <delete id="deleteOneStudent">
        delete from student where stu_num=#{stuNum}
    </delete>
    <delete id="deleteManyStudents" parameterType="java.util.List">
        delete from student where stu_num in
        <foreach collection="list" item="stuNum" open="(" separator="," close=")">
            #{stuNum}
        </foreach>

    </delete>

    <select id="selectStudentByNum" resultMap="BaseResultMap">
        select * from student where stu_num=#{stuNum}
    </select>
    <select id="selectAllStudentInfo" resultMap="StudentWithGCMCResultMap"
            parameterType="com.springmvc.dto.student.StudentSearchDto">
        select s1.*,g1.grade_name as stu_grade_name,c1.class_name as stu_class_name,m1.major_name as
        stu_major_name,c2.college_name as stu_college_name
        from student s1 inner join grade g1 on s1.stu_grade=g1.grade_id
        <if test="stuNum != null and stuNum!=''">
            <bind name="stuNumLike" value=" '%' + stuNum + '%' "/>
            and s1.stu_num like #{stuNumLike}
        </if>
        <if test="stuName != null and stuName!=''">
            <bind name="stuNameLike" value=" '%' + stuName + '%' "/>
            and s1.stu_name like #{stuNameLike}
        </if>
        <if test="stuSex != null and stuSex!=''">
            and s1.stu_sex=#{stuSex}
        </if>
        <if test="stuGradeName != null and stuGradeName!=''">
            and g1.grade_name=#{stuGradeName}
        </if>
        <if test="stuDegree != null and stuDegree!=''">
            and s1.stu_degree=#{stuDegree}
        </if>
        inner join class c1 on s1.stu_class=c1.class_id
        <if test="stuClassName != null and stuClassName !=''">
            <bind name="stuClassLike" value=" '%' + stuClassName + '%' "/>
            and c1.class_name like #{stuClassLike}
        </if>
        inner join major m1 on c1.class_major=m1.major_id
        <if test="stuMajorName != null and stuMajorName !=''">
            <bind name="stuMajorLike" value=" '%' + stuMajorName + '%' "/>
            and m1.major_name like #{stuMajorLike}
        </if>
        inner join college c2 on m1.major_college=c2.college_id
        <if test="stuCollegeName != null and stuCollegeName !=''">
            <bind name="stuCollegeLike" value=" '%' + stuCollegeName + '%' "/>
            and c2.college_name like #{stuCollegeLike}
        </if>
        <if test="condition1 == 'stuNum'">
            order by s1.stu_num
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
        <if test="condition1 == 'stuBirthday'">
            order by s1.stu_birthday
            <if test="condition2 == 'asc'">
                desc
            </if>
            <if test="condition2 == 'desc'">
                asc
            </if>
        </if>
        <if test="condition1 == 'stuGrade'">
            order by s1.stu_grade
            <if test="condition2 == 'asc'">
                desc
            </if>
            <if test="condition2 == 'desc'">
                asc
            </if>
        </if>
        <if test="condition1 == 'stuDegree'">
            <if test="condition2 == 'asc'">
                order by field(stu_degree,'本科','硕士','博士')
            </if>
            <if test="condition2 == 'desc'">
                order by field(stu_degree,'博士','硕士','本科')
            </if>
        </if>
    </select>
    <select id="selectStudentOwnInfoByNum" resultMap="StudentWithGCMCResultMap">
        select s1.*,g1.grade_name as stu_grade_name,c1.class_name as stu_class_name,m1.major_name as stu_major_name,c2.college_name as stu_college_name
        from student s1 inner join grade g1 on s1.stu_grade=g1.grade_id and s1.stu_num=#{stuNum}
            inner join class c1 on s1.stu_class=c1.class_id
              inner join major m1 on c1.class_major=m1.major_id
                inner join college c2 on m1.major_college=c2.college_id
    </select>

    <select id="selectStuTotalBySex" resultType="com.springmvc.dto.other.senior.StudentTotalGroupBySex">
        select s1.stu_sex as sex, count(*) as total
        from student s1 inner join class c1 on s1.stu_class=c1.class_id
        <if test="stuClassName != null and stuClassName !=''">
            and c1.class_name=#{stuClassName}
        </if>
        inner join major m1 on m1.major_id=c1.class_major
        <if test="stuMajorName != null and stuMajorName !=''">
            and m1.major_name=#{stuMajorName}
        </if>
        inner join college c2 on c2.college_id=m1.major_college
        <if test="stuCollegeName != null and stuCollegeName !=''">
            and c2.college_name=#{stuCollegeName}
        </if>
        group by s1.stu_sex
    </select>
    <select id="selectStuTotalByCommonName"
            resultType="com.springmvc.dto.other.senior.ObjectTotalGroupByCommonName" statementType="CALLABLE">
    {
      call count_stu_percent(#{type,mode=IN},#{collegeName,mode=IN},#{majorName,mode=IN})
    }
    </select>
</mapper>